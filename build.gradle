plugins {
  id 'application'
  id 'java'
  id 'eclipse'
  id 'idea'
  id 'jacoco'
}

description = "Kryptnostic Datastore"
group = "com.kryptnostic"
ext.projectName = "datastore"
ext.scmUrl = 'scm:git:https://github.com/dataloom/datastore.git'
ext.connectionUrl = 'scm:git:https://github.com/dataloom/datastore.git'
ext.developerConnectionUrl = 'scm:git:https://github.com/dataloom/datastore.git'

distTar {
  archiveName "$baseName" + ".tgz"
}

apply from: "https://raw.githubusercontent.com/kryptnostic/gradles/master/kryptnostic.gradle"

mainClassName = "com.dataloom.datastore.Datastore"
applicationDefaultJvmArgs = ["-Xmx5G", "-server"]
sourceCompatibility=JavaVersion.VERSION_1_8
targetCompatibility=JavaVersion.VERSION_1_8
/*
run {
  if (System.getProperty("exec.args")) {
    args System.getProperty("exec.args").split()
  }
}
*/
run.args = ["local","cassandra"]

configurations {
    tests
      published.extendsFrom tests, archives
}

ext.odata_version='4.2.0'
dependencies {

    if( project.hasProperty('developmentMode') && project.developmentMode ) {
        logger.quiet(project.name + " using project dependencies.")
        compile project(":rhizome")
        compile project(":kryptnostic-conductor-client")
        compile project(":loom-api")
        testCompile( project(path: ":loom-api", configuration: "tests"))
        testCompile( project(path: ":rhizome", configuration: "tests"))
        testCompile( project(path: ":rhizome-client", configuration: "tests"))
    } else {
        logger.quiet(project.name + " using jar dependencies.")
        compile "com.kryptnostic:rhizome:${rhizome_version}"
        compile "com.kryptnostic:kryptnostic-conductor-client:${conductor_client_version}"
        compile ("com.kryptnostic:loom-api:${loom_api_version}")
        testCompile "com.kryptnostic:loom-api:${loom_api_version}:tests"
        testCompile "com.kryptnostic:rhizome:${rhizome_version}:tests"
        testCompile "com.kryptnostic:rhizome-client:${rhizome_client_version}:tests"
    }

    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: "${cassandra_driver_version}"
    compile "org.apache.olingo:odata-server-api:${odata_version}"
    compile "org.apache.olingo:odata-server-core:${odata_version}"
    compile "org.apache.olingo:odata-commons-api:${odata_version}"
    compile "org.apache.olingo:odata-commons-core:${odata_version}"

    /*
     * TESTING
     */
    testCompile "junit:junit:${junit_version}"
    testCompile "org.cassandraunit:cassandra-unit:3.1.1.0"
    testCompile( "org.mockito:mockito-all:${mockito_version}" ) {
        exclude module : 'hamcrest'
        exclude module : 'hamcrest-core'
    }
}

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true

    ext.sourceCompatibility=JavaVersion.VERSION_1_8
    ext.targetCompatibility=JavaVersion.VERSION_1_8
}
